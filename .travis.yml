env:
  global:
    - REPO_DIR=symengine
    # Commit from your-project that you want to build
    - BUILD_COMMIT=c97afd8796a4b8df7c6a34e143942a442c853337
    # pip dependencies to _build_ your project
    - BUILD_DEPENDS="Cython"
    # pip dependencies to _test_ your project.  Include any dependencies
    # that you need, that are also specified in BUILD_DEPENDS, this will be
    # a separate install.
    - TEST_DEPENDS="pytest sympy==1.0"
    - TEST_NPY_VERSION="1.14.*"
    - PLAT=x86_64
    - UNICODE_WIDTH=32

language: python
# The travis Python version is unrelated to the version we build and test
# with.  This is set with the MB_PYTHON_VERSION variable.
python: 3.5
sudo: required
dist: trusty
services: docker

matrix:
  exclude:
    # Exclude the default Python 3.5 build
    - python: 3.5
  include:
    - os: linux
      env:
        - MB_PYTHON_VERSION=2.7
        - UPLOAD_SDIST=yes
    - os: linux
      env:
        - MB_PYTHON_VERSION=2.7
        - UNICODE_WIDTH=16
    - os: linux
      env:
        - MB_PYTHON_VERSION=3.4
    - os: linux
      env:
        - MB_PYTHON_VERSION=3.5
    - os: linux
      env:
        - MB_PYTHON_VERSION=3.6
    - os: linux
      env:
        - MB_PYTHON_VERSION=3.7
    - os: osx
      language: generic
      env:
        - MB_PYTHON_VERSION=2.7
    - os: osx
      language: generic
      env:
        - MB_PYTHON_VERSION=3.4
    - os: osx
      language: generic
      env:
        - MB_PYTHON_VERSION=3.5
    - os: osx
      language: generic
      env:
        - MB_PYTHON_VERSION=3.6
    - os: osx
      language: generic
      env:
        - MB_PYTHON_VERSION=3.7

before_install:
  - if [ ! -z ${TRAVIS_TAG} ]; then export BUILD_COMMIT=${TRAVIS_TAG}; fi
  - export TEST_DEPENDS="${TEST_DEPENDS} numpy==${TEST_NPY_VERSION}"
  - source multibuild/common_utils.sh
  - source multibuild/travis_steps.sh
  - before_install

install:
  # Maybe get and clean and patch source
  - clean_code $REPO_DIR $BUILD_COMMIT
  - build_wheel $REPO_DIR $PLAT

script:
  - install_run $PLAT
  - if [ $UPLOAD_SDIST == "yes" ]; then cd symengine && python setup.py sdist && cd .. && mv symengine/dist/*.tar.gz wheelhouse/; fi
  - if [ $UPLOAD_SDIST == "yes" ]; then cp archives/* wheelhouse/; fi

deploy:
  provider: releases
  api-key:
    secure: "POUaCfVaSlA7h5DuDkDVEqTWCd0+DtAWLeszBg84cEMM7ra7CzU2fWyKpnNezWt0AkfdwyIyo3VYct3YVArPiE/qBmmjrNioIl5rlgMW9VCr6WU5LJ1Y7v+zOGH+Qm9B/jhvD1arXyVaWZSnXhhjHDSlPi5DpIT90GS1OL+4sGl1Q9XokM55m60bf6m038Yy1E/OfO0oPilmwHs4RfMWAbjVewuAunQLmiNZYvFkgQAqsZUCyhQdph5LT5jN9Y0MoKmR8G3FOelXRunSRsrfo0giFSHzfBGr2uMz/h7Yr80UzFkEive/LTc5pCDKtGzSCPv60oUbHjKNVN207QJAToazQVgkFoE7E4EHOxfOaGfO2aH45haeQ/EZWwJDq0rrg2Fv48mhaZVx9eVRUCRu40U4SQuPa2uYNMrP07aBWf8IDgFG3UOYhU4EwWFlwcX1XELK5MWGwGveYfKFPARVqCVnKujOhuUNXYNJM/5pDjXxK0DASxacSiqybCeU2gOcdjj0Xf8ZBBfdzVtoAf2i6vHoihWZG8ywTkqve3QxQurhy6sFwoQJhy2VFJQjOPJrFEdwCHdKriqeygPi/sf5PZMW6Haz9XWcDhjeZ6vZsXJVF/AczdQD7p5hutGPOrlM3udur9pnfjrCgdYvL4/r3n7L71/9/7g5i+MZ58t8u38="
  file_glob: true
  file: wheelhouse/*
  skip_cleanup: true
  on:
    tags: true
